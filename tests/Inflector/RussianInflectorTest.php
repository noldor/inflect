<?php
declare(strict_types = 1);

namespace Noldors\Inflect\Tests\Inflector;

use Noldors\Inflect\Inflector;
use Noldors\Inflect\Inflectors\RussianInflector;
use PHPUnit\Framework\TestCase;

class RussianInflectorTest extends TestCase
{
    /**
     * @var Inflector
     */
    protected static $inflector;

    public static function setUpBeforeClass()
    {
        \Locale::setDefault('ru_RU');
        static::$inflector = new Inflector(new RussianInflector());
    }

    /**
     * Singular & Plural test data. Returns an array of sample words.
     *
     * @return array
     */
    public function dataSampleWords()
    {
        return [
            ['', '', 0],
            ['', '', 1],
            ['', '', 2],
            ['', '', 5],
            ['', '', 21],
            ['', '', 23],
            ['', '', 30],

            ['товар', 'товаров', 0],
            ['товар', 'товар', 1],
            ['товар', 'товара', 2],
            ['товар', 'товаров', 5],
            ['товар', 'товар', 21],
            ['товар', 'товара', 23],
            ['товар', 'товаров', 30],

            ['пользователь', 'пользователей', 0],
            ['пользователь', 'пользователь', 1],
            ['пользователь', 'пользователя', 2],
            ['пользователь', 'пользователей', 5],
            ['пользователь', 'пользователь', 21],
            ['пользователь', 'пользователя', 23],
            ['пользователь', 'пользователей', 30],
            ['пользователь', 'пользователь', 101],

            ['человек', 'человек', 0],
            ['человек', 'человек', 1],
            ['человек', 'человека', 2],
            ['человек', 'человек', 5],
            ['человек', 'человек', 21],
            ['человек', 'человека', 23],
            ['человек', 'человек', 30],

            ['начальник', 'начальников', 0],
            ['начальник', 'начальник', 1],
            ['начальник', 'начальника', 2],
            ['начальник', 'начальников', 5],
            ['начальник', 'начальник', 21],
            ['начальник', 'начальника', 23],
            ['начальник', 'начальников', 30],

            ['дело', 'дел', 0],
            ['дело', 'дело', 1],
            ['дело', 'дела', 2],
            ['дело', 'дел', 5],
            ['дело', 'дело', 21],
            ['дело', 'дела', 23],
            ['дело', 'дел', 30],

            ['жизнь', 'жизней', 0],
            ['жизнь', 'жизнь', 1],
            ['жизнь', 'жизни', 2],
            ['жизнь', 'жизней', 5],
            ['жизнь', 'жизнь', 21],
            ['жизнь', 'жизни', 23],
            ['жизнь', 'жизней', 30],

            ['рука', 'рук', 0],
            ['рука', 'рука', 1],
            ['рука', 'руки', 2],
            ['рука', 'рук', 5],
            ['рука', 'рука', 21],
            ['рука', 'руки', 23],
            ['рука', 'рук', 30],

            ['слово', 'слов', 0],
            ['слово', 'слово', 1],
            ['слово', 'слова', 2],
            ['слово', 'слов', 5],
            ['слово', 'слово', 21],
            ['слово', 'слова', 23],
            ['слово', 'слов', 30],

            ['место', 'мест', 0],
            ['место', 'место', 1],
            ['место', 'места', 2],
            ['место', 'мест', 5],
            ['место', 'место', 21],
            ['место', 'места', 23],
            ['место', 'мест', 30],

            ['год', 'лет', 0],
            ['год', 'год', 1],
            ['год', 'года', 2],
            ['год', 'лет', 5],
            ['год', 'год', 21],
            ['год', 'года', 23],
            ['год', 'лет', 30],

            ['раз', 'раз', 0],
            ['раз', 'раз', 1],
            ['раз', 'раза', 2],
            ['раз', 'раз', 5],
            ['раз', 'раз', 21],
            ['раз', 'раза', 23],
            ['раз', 'раз', 30],

            ['слово', 'слов', 0],
            ['слово', 'слово', 1],
            ['слово', 'слова', 2],
            ['слово', 'слов', 5],
            ['слово', 'слово', 21],
            ['слово', 'слова', 23],
            ['слово', 'слов', 30],

            ['место', 'мест', 0],
            ['место', 'место', 1],
            ['место', 'места', 2],
            ['место', 'мест', 5],
            ['место', 'место', 21],
            ['место', 'места', 23],
            ['место', 'мест', 30],

            ['лицо', 'лиц', 0],
            ['лицо', 'лицо', 1],
            ['лицо', 'лица', 2],
            ['лицо', 'лиц', 5],
            ['лицо', 'лицо', 21],
            ['лицо', 'лица', 23],
            ['лицо', 'лиц', 30],

            ['ребенок', 'детей', 0],
            ['ребенок', 'ребенок', 1],
            ['ребенок', 'ребенка', 2],
            ['ребенок', 'детей', 5],
            ['ребенок', 'ребенок', 21],
            ['ребенок', 'ребенка', 23],
            ['ребенок', 'детей', 30],

            ['друг', 'друзей', 0],
            ['друг', 'друг', 1],
            ['друг', 'друга', 2],
            ['друг', 'друзей', 5],
            ['друг', 'друг', 21],
            ['друг', 'друга', 23],
            ['друг', 'друзей', 30],

            ['глаз', 'глаз', 0],
            ['глаз', 'глаз', 1],
            ['глаз', 'глаза', 2],
            ['глаз', 'глаз', 5],
            ['глаз', 'глаз', 21],
            ['глаз', 'глаза', 23],
            ['глаз', 'глаз', 30],

            ['вопрос', 'вопросов', 0],
            ['вопрос', 'вопрос', 1],
            ['вопрос', 'вопроса', 2],
            ['вопрос', 'вопросов', 5],
            ['вопрос', 'вопрос', 21],
            ['вопрос', 'вопроса', 23],
            ['вопрос', 'вопросов', 30],

            ['случай', 'случаев', 0],
            ['случай', 'случай', 1],
            ['случай', 'случая', 2],
            ['случай', 'случаев', 5],
            ['случай', 'случай', 21],
            ['случай', 'случая', 23],
            ['случай', 'случаев', 30],

            ['голова', 'голов', 0],
            ['голова', 'голова', 1],
            ['голова', 'головы', 2],
            ['голова', 'голов', 5],
            ['голова', 'голова', 21],
            ['голова', 'головы', 23],
            ['голова', 'голов', 30],

            ['конец', 'концов', 0],
            ['конец', 'конец', 1],
            ['конец', 'конца', 2],
            ['конец', 'концов', 5],
            ['конец', 'конец', 21],
            ['конец', 'конца', 23],
            ['конец', 'концов', 30],

            ['вид', 'видов', 0],
            ['вид', 'вид', 1],
            ['вид', 'вида', 2],
            ['вид', 'видов', 5],
            ['вид', 'вид', 21],
            ['вид', 'вида', 23],
            ['вид', 'видов', 30],

            ['система', 'систем', 0],
            ['система', 'система', 1],
            ['система', 'системы', 2],
            ['система', 'систем', 5],
            ['система', 'система', 21],
            ['система', 'системы', 23],
            ['система', 'систем', 30],

            ['часть', 'частей', 0],
            ['часть', 'часть', 1],
            ['часть', 'части', 2],
            ['часть', 'частей', 5],
            ['часть', 'часть', 21],
            ['часть', 'части', 23],
            ['часть', 'частей', 30],

            ['женщина', 'женщин', 0],
            ['женщина', 'женщина', 1],
            ['женщина', 'женщины', 2],
            ['женщина', 'женщин', 5],
            ['женщина', 'женщина', 21],
            ['женщина', 'женщины', 23],
            ['женщина', 'женщин', 30],

            ['рубль', 'рублей', 0],
            ['рубль', 'рубль', 1],
            ['рубль', 'рубля', 2],
            ['рубль', 'рублей', 5],
            ['рубль', 'рубль', 21],
            ['рубль', 'рубля', 23],
            ['рубль', 'рублей', 30],

            ['доллар', 'долларов', 0],
            ['доллар', 'доллар', 1],
            ['доллар', 'доллара', 2],
            ['доллар', 'долларов', 5],
            ['доллар', 'доллар', 21],
            ['доллар', 'доллара', 23],
            ['доллар', 'долларов', 30],

            ['проблема', 'проблем', 0],
            ['проблема', 'проблема', 1],
            ['проблема', 'проблемы', 2],
            ['проблема', 'проблем', 5],
            ['проблема', 'проблема', 21],
            ['проблема', 'проблемы', 23],
            ['проблема', 'проблем', 30],

            ['решение', 'решений', 0],
            ['решение', 'решение', 1],
            ['решение', 'решения', 2],
            ['решение', 'решений', 5],
            ['решение', 'решение', 21],
            ['решение', 'решения', 23],
            ['решение', 'решений', 30],

            ['тысяча', 'тысяч', 0],
            ['тысяча', 'тысяча', 1],
            ['тысяча', 'тысячи', 2],
            ['тысяча', 'тысяч', 5],
            ['тысяча', 'тысяча', 21],
            ['тысяча', 'тысячи', 23],
            ['тысяча', 'тысяч', 30],

            ['миллион', 'миллионов', 0],
            ['миллион', 'миллион', 1],
            ['миллион', 'миллиона', 2],
            ['миллион', 'миллионов', 5],
            ['миллион', 'миллион', 21],
            ['миллион', 'миллиона', 23],
            ['миллион', 'миллионов', 30],

            ['миллиард', 'миллиардов', 0],
            ['миллиард', 'миллиард', 1],
            ['миллиард', 'миллиарда', 2],
            ['миллиард', 'миллиардов', 5],
            ['миллиард', 'миллиард', 21],
            ['миллиард', 'миллиарда', 23],
            ['миллиард', 'миллиардов', 30],

            ['процесс', 'процессов', 0],
            ['процесс', 'процесс', 1],
            ['процесс', 'процесса', 2],
            ['процесс', 'процессов', 5],
            ['процесс', 'процесс', 21],
            ['процесс', 'процесса', 23],
            ['процесс', 'процессов', 30],

            ['форма', 'форм', 0],
            ['форма', 'форма', 1],
            ['форма', 'формы', 2],
            ['форма', 'форм', 5],
            ['форма', 'форма', 21],
            ['форма', 'формы', 23],
            ['форма', 'форм', 30],

            ['час', 'часов', 0],
            ['час', 'час', 1],
            ['час', 'часа', 2],
            ['час', 'часов', 5],
            ['час', 'час', 21],
            ['час', 'часа', 23],
            ['час', 'часов', 30],

            ['минута', 'минут', 0],
            ['минута', 'минута', 1],
            ['минута', 'минуты', 2],
            ['минута', 'минут', 5],
            ['минута', 'минута', 21],
            ['минута', 'минуты', 23],
            ['минута', 'минут', 30],

            ['секунда', 'секунд', 0],
            ['секунда', 'секунда', 1],
            ['секунда', 'секунды', 2],
            ['секунда', 'секунд', 5],
            ['секунда', 'секунда', 21],
            ['секунда', 'секунды', 23],
            ['секунда', 'секунд', 30],

            ['месяц', 'месяцев', 0],
            ['месяц', 'месяц', 1],
            ['месяц', 'месяца', 2],
            ['месяц', 'месяцев', 5],
            ['месяц', 'месяц', 21],
            ['месяц', 'месяца', 23],
            ['месяц', 'месяцев', 30],

            ['век', 'веков', 0],
            ['век', 'век', 1],
            ['век', 'века', 2],
            ['век', 'веков', 5],
            ['век', 'век', 21],
            ['век', 'века', 23],
            ['век', 'веков', 30],

            ['организация', 'организаций', 0],
            ['организация', 'организация', 1],
            ['организация', 'организации', 2],
            ['организация', 'организаций', 5],
            ['организация', 'организация', 21],
            ['организация', 'организации', 23],
            ['организация', 'организаций', 30],

            ['письмо', 'писем', 0],
            ['письмо', 'письмо', 1],
            ['письмо', 'письма', 2],
            ['письмо', 'писем', 5],
            ['письмо', 'письмо', 21],
            ['письмо', 'письма', 23],
            ['письмо', 'писем', 30],

            ['рынок', 'рынков', 0],
            ['рынок', 'рынок', 1],
            ['рынок', 'рынка', 2],
            ['рынок', 'рынков', 5],
            ['рынок', 'рынок', 21],
            ['рынок', 'рынка', 23],
            ['рынок', 'рынков', 30],

            ['федерация', 'федераций', 0],
            ['федерация', 'федерация', 1],
            ['федерация', 'федерации', 2],
            ['федерация', 'федераций', 5],
            ['федерация', 'федерация', 21],
            ['федерация', 'федерации', 23],
            ['федерация', 'федераций', 30],

            ['мужчина', 'мужчин', 0],
            ['мужчина', 'мужчина', 1],
            ['мужчина', 'мужчины', 2],
            ['мужчина', 'мужчин', 5],
            ['мужчина', 'мужчина', 21],
            ['мужчина', 'мужчины', 23],
            ['мужчина', 'мужчин', 30],

            ['сердце', 'сердец', 0],
            ['сердце', 'сердце', 1],
            ['сердце', 'сердца', 2],
            ['сердце', 'сердец', 5],
            ['сердце', 'сердце', 21],
            ['сердце', 'сердца', 23],
            ['сердце', 'сердец', 30],

        ];
    }

    /**
     * Normal & Transliterated data.
     *
     * @return array
     */
    public function dataSampleTranslit()
    {
        return [
            [
                'Универсальный грамматический анализатор естественных языков с нуля. Выпуск 1.',
                'universalnyy-grammaticheskiy-analizator-yestestvennykh-yazykov-s-nulya-vypusk-1'
            ],
            [
                'Как Discord хранит миллиарды сообщений',
                'kak-discord-khranit-milliardy-soobshcheniy'
            ],
            [
                'Security Week 10: удаленное управление по DNS, как Google капчу свою обманул, дыра в плагине к Wordpress',
                'security-week-10-udalennoye-upravleniye-po-dns-kak-google-kapchu-svoyu-obmanul-dyra-v-plagine-k-wordpress'
            ],
            [
                'NeoQuest 2017: Реверс андроид приложения в задании «Почини вождя!»',
                'neoquest-2017-revers-android-prilozheniya-v-zadanii-pochini-vozhdya'
            ],
        ];
    }

    /**
     * testRussianInflectorPluralize method
     *
     * @dataProvider dataSampleWords
     * @return void
     */
    public function testCanPluralizeWord($singular, $plural, $count)
    {
        $this->assertEquals($plural, static::$inflector->plural($singular, $count));
    }

    /**
     * testRussianInflectorSingularize method
     *
     * @dataProvider dataSampleWords
     * @return void
     */
    public function testCanSingularizeWord($singular, $plural)
    {
        $this->assertEquals($singular, static::$inflector->singular($plural));
    }

    /**
     * testInflectingTranslit method
     *
     * @dataProvider dataSampleTranslit
     * @return void
     */
    public function testCanTransliterateSentence($normal, $translit)
    {
        $this->assertEquals($translit, static::$inflector->slug($normal));
    }
}